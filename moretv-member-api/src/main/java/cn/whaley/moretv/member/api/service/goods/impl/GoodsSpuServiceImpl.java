package cn.whaley.moretv.member.api.service.goods.impl;

import cn.whaley.moretv.member.api.dto.goods.GoodsSpuResponse;
import cn.whaley.moretv.member.api.service.goods.GoodsSpuService;
import cn.whaley.moretv.member.api.util.ResponseHandler;
import cn.whaley.moretv.member.base.constant.ApiCodeEnum;
import cn.whaley.moretv.member.base.constant.CacheKeyConstant;
import cn.whaley.moretv.member.base.dto.response.ResultResponse;
import cn.whaley.moretv.member.model.goods.GoodsSpu;
import cn.whaley.moretv.member.service.goods.impl.BaseGoodsSpuServiceImpl;
import com.alibaba.fastjson.JSON;
import com.google.common.collect.Lists;
import org.springframework.data.redis.core.HashOperations;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.util.CollectionUtils;
import org.springframework.util.StringUtils;

import java.util.List;

/**
* ServiceImpl: GoodsSpuServiceImpl
* Mapper : GoodsSpuMapper
* Model  : GoodsSpu
*
* This ServiceImpl generated by MyBatis Generator Extend at 2017-03-21 14:37:17
*/
@Service
@Transactional
public class GoodsSpuServiceImpl extends BaseGoodsSpuServiceImpl implements GoodsSpuService {

    @Override
    public ResultResponse getGoodsSpuList() {
        return findGoodsSpu(null);
    }

    @Override
    public ResultResponse getGoodsSpuListByTag(String memberCode) {
        return findGoodsSpu(memberCode);
    }

    private ResultResponse findGoodsSpu(String memberCode) {
        HashOperations<String, String, String> opsHash = redisTemplate.opsForHash();
        List<GoodsSpuResponse> goodsSpuList = Lists.newArrayList();

        List<String> list = opsHash.values(CacheKeyConstant.REDIS_KEY_GOODS_SPU);
        if (CollectionUtils.isEmpty(list)) {
            return ResultResponse.define(ApiCodeEnum.API_DATA_NOT_EXIST);
        }

        for (String value : list) {
            GoodsSpu goodsSpu = JSON.parseObject(value, GoodsSpu.class);
            GoodsSpuResponse response = ResponseHandler.converGoodsSpu(goodsSpu);

            if (StringUtils.isEmpty(memberCode)) {
                goodsSpuList.add(response);
            } else if (memberCode.equals(goodsSpu.getMemberCode())) {
                goodsSpuList.add(response);
            }
        }

        if (CollectionUtils.isEmpty(goodsSpuList)) {
            return ResultResponse.define(ApiCodeEnum.API_DATA_NOT_EXIST);
        }
        return ResultResponse.success(goodsSpuList);
    }

}