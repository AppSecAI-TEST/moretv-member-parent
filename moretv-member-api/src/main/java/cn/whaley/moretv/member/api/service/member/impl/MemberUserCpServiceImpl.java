package cn.whaley.moretv.member.api.service.member.impl;

import cn.whaley.moretv.member.api.dto.member.MemberCpResponse;
import cn.whaley.moretv.member.api.service.member.MemberUserCpService;
import cn.whaley.moretv.member.base.constant.CacheKeyConstant;
import cn.whaley.moretv.member.base.constant.GlobalEnum;
import cn.whaley.moretv.member.base.dto.request.BaseRequest;
import cn.whaley.moretv.member.base.dto.response.ResultResponse;
import cn.whaley.moretv.member.base.service.impl.GenericServiceImpl;
import cn.whaley.moretv.member.mapper.member.MemberUserCpMapper;
import cn.whaley.moretv.member.model.member.MemberUserCp;

import com.alibaba.fastjson.JSON;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.redis.core.HashOperations;
import org.springframework.data.redis.core.RedisTemplate;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.ArrayList;
import java.util.List;


/**
* ServiceImpl: MemberUserAuthorityServiceImpl
* Mapper : MemberUserAuthorityMapper
* Model  : MemberUserAuthority
*
* This ServiceImpl generated by MyBatis Generator Extend at 2017-03-30 17:05:25
*/
@Service
@Transactional
public class MemberUserCpServiceImpl extends GenericServiceImpl<MemberUserCp, Integer, MemberUserCpMapper>
        implements MemberUserCpService {
    

    @Autowired
    private MemberUserCpMapper memberUserCpMapper;

    @Autowired
    private RedisTemplate<String, String> redisTemplate;

    @Override
    public MemberUserCpMapper getGenericMapper() {
        return memberUserCpMapper;
    }

    @Override
    public ResultResponse getCpInfo(BaseRequest baseRequest) {
        Integer accountId = baseRequest.getAccountId();
        String cpInfoRedisKey = String.format(CacheKeyConstant.REDIS_KEY_MEMBER_CP, accountId);
        List<MemberCpResponse> memberCpResponseList = new ArrayList<>();
        
        //1、从redis查询
        HashOperations<String, String, String> hashOps = redisTemplate.opsForHash();
        List<String> memberUserCpList = hashOps.values(cpInfoRedisKey);
        
        //2、过滤状态异常的数据
        for(String cpInfo : memberUserCpList){
            MemberUserCp muc = JSON.parseObject(cpInfo, MemberUserCp.class);
            if(GlobalEnum.StatusText.VALID.getCode().equals(muc.getStatus()))
                memberCpResponseList.add(new MemberCpResponse(muc.getCpUsername(), muc.getCpToken(), muc.getCpSource()));
        }
            
        //3、返回, 没有数据的话返回空数组
        return ResultResponse.success(memberCpResponseList);
    }


}